[{"C:\\Users\\dell\\Desktop\\E-commerce\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\App\\App.jsx":"2","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\MasterLayout\\MasterLayout.jsx":"3","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Category\\Category.jsx":"4","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Pages\\HomePage.jsx":"5","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Brands\\Brands.jsx":"6","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Login\\Login.jsx":"7","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Products\\Products.jsx":"8","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Logout\\Logout.jsx":"9","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Context\\CartContext.jsx":"10","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Register\\Register.jsx":"11","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\ProductDetailes\\ProductDetailes.jsx":"12","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\CheckOut\\CheckOut.jsx":"13","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Cart\\Cart.jsx":"14","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Navbar\\Navbar.jsx":"15","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\MainSLider\\MainSLider.jsx":"16","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Utilities\\BaseUrl.jsx":"17","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\CategorySlider\\CategorySlider.jsx":"18","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Product\\Product.jsx":"19","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Loading\\Loading.jsx":"20","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Utils\\notify.jsx":"21"},{"size":559,"mtime":1686125748000,"results":"22","hashOfConfig":"23"},{"size":1574,"mtime":1686125748000,"results":"24","hashOfConfig":"23"},{"size":218,"mtime":1690379030443,"results":"25","hashOfConfig":"23"},{"size":105,"mtime":1686125748000,"results":"26","hashOfConfig":"23"},{"size":317,"mtime":1690383389955,"results":"27","hashOfConfig":"23"},{"size":101,"mtime":1686125748000,"results":"28","hashOfConfig":"23"},{"size":3835,"mtime":1686125748000,"results":"29","hashOfConfig":"23"},{"size":829,"mtime":1690383587870,"results":"30","hashOfConfig":"23"},{"size":101,"mtime":1686125748000,"results":"31","hashOfConfig":"23"},{"size":1777,"mtime":1686125748000,"results":"32","hashOfConfig":"23"},{"size":5356,"mtime":1686125748000,"results":"33","hashOfConfig":"23"},{"size":1520,"mtime":1690389621753,"results":"34","hashOfConfig":"23"},{"size":1233,"mtime":1686125748000,"results":"35","hashOfConfig":"23"},{"size":4331,"mtime":1686125748000,"results":"36","hashOfConfig":"23"},{"size":3122,"mtime":1690381639763,"results":"37","hashOfConfig":"23"},{"size":878,"mtime":1690490875245,"results":"38","hashOfConfig":"23"},{"size":68,"mtime":1686125748000,"results":"39","hashOfConfig":"23"},{"size":1084,"mtime":1690491023484,"results":"40","hashOfConfig":"23"},{"size":2227,"mtime":1690491136831,"results":"41","hashOfConfig":"23"},{"size":191,"mtime":1686125748000,"results":"42","hashOfConfig":"23"},{"size":112,"mtime":1686125748000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n65bg7",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},"C:\\Users\\dell\\Desktop\\E-commerce\\src\\index.js",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\App\\App.jsx",["113"],[],"import MasterLayout from '../MasterLayout/MasterLayout';\nimport HomePage from '../Pages/HomePage';\nimport Products from '../Products/Products';\nimport './../App/App.css';\nimport { RouterProvider, createBrowserRouter, createHashRouter } from 'react-router-dom'\nimport Category from './../Category/Category'\nimport Brands from '../Brands/Brands';\nimport ProductDetailes from '../ProductDetailes/ProductDetailes';\nimport Login from '../Login/Login'\nimport Logout from '../Logout/Logout'\nimport Register from '../Register/Register'\nimport { ToastContainer } from 'react-toastify';\nimport CartContextProvider from '../../Context/CartContext';\nimport Cart from '../Cart/Cart';\nimport CheckOut from '../CheckOut/CheckOut';\n\n\n\nfunction App() {\n  let routes = createHashRouter([{\n    path: \"\",\n    element: <MasterLayout />,\n    children: [\n      { index: true, element: <HomePage /> },\n      { path: 'products', element: <Products /> },\n      { path: 'categories', element: <Category /> },\n      { path: 'brands', element: <Brands /> },\n      { path: 'cart', element: <Cart /> },\n      { path: 'checkout', element: <CheckOut /> },\n      { path: 'login', element: <Login /> },\n      { path: 'logout', element: <Logout /> },\n      { path: 'register', element: <Register /> },\n      { path: 'product-details/:id', element: <ProductDetailes /> },\n    ]\n  }])\n  return (\n    <>\n      {/* <ToastContainer theme='colored'/> */}\n      <ToastContainer />\n      <CartContextProvider>\n        <RouterProvider router={routes} />\n      </CartContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\MasterLayout\\MasterLayout.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Category\\Category.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Pages\\HomePage.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Brands\\Brands.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Login\\Login.jsx",["114","115","116"],[],"import axios from 'axios';\nimport { useFormik } from 'formik'\nimport React, { useState } from 'react'\nimport * as Yup from 'yup';\nimport { baseUrl } from '../Utilities/BaseUrl'\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nexport default function Login() {\n\n  const notify = (msg, type) => toast[type](msg);\n\n  const [loading, setLoading] = useState(false)\n  let navigate = useNavigate();\n\n  // with Yup\n  let validationSchema = Yup.object({\n\n    email: Yup.string().email().required(),\n    password: Yup.string().required(),\n\n  })\n\n  // with Formik\n  // A custom validation function. This must return an object\n  // which keys are symmetrical to our values/initialValues\n  // const validate = values => {\n  //     const errors = {};\n  //     if (!values.name) {\n  //         errors.name = 'Required';\n  //     } else if (values.name.length > 15) {\n  //         errors.name = 'Must be 15 characters or less';\n  //     }\n\n  //     if (!values.email) {\n  //         errors.email = 'Required';\n  //     } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n  //         errors.email = 'Invalid email address';\n  //     }\n\n  //     if (!values.password) {\n  //         errors.password = 'Required';\n  //     } else if (!/^[A-Z][a-z0-9A-Z@#%]$/i.test(values.password)) {\n  //         errors.password = 'Invalid password address';\n  //     }\n\n  //     if (!values.rePassword) {\n  //         errors.rePassword = 'Required';\n  //     } else if (values.rePassword != values.password) {\n  //         errors.rePassword = 'Password is not matched ';\n  //     }\n\n  //     return errors;\n  // };\n\n  let registerationFormik = useFormik({\n    initialValues: {\n\n      email: \"\",\n      password: \"\",\n\n    },\n    // validate,\n    validationSchema,\n    onSubmit: (values) => {\n      setLoading(true)\n      // console.log(values);\n      // alert(JSON.stringify(values, null, 2));\n      // send api\n      axios.post(`${baseUrl}/auth/signin`, values).then((data) => {\n        console.log(data);\n       \n        if (data.status == 200) {\n          localStorage.setItem('token' , data.data.token)\n          setLoading(false);\n          notify(\"success\", \"success\");\n          navigate('/');\n        }\n      }).catch((error) => {\n        if (error.response.status == 401) {\n          setLoading(false)\n          notify(error.response.data.message, \"error\");\n          // alert(error.response.data.message)\n        }\n        console.log(error);\n      })\n    },\n  })\n\n  // console.log(registerationFormik.errors);\n\n  return (\n    <div className=\"w-50 m-auto my-5\">\n      <h2>Login Now</h2>\n      <form onSubmit={registerationFormik.handleSubmit}>\n\n        <label htmlFor=\"email\">Email</label>\n        <input onBlur={registerationFormik.handleBlur} onChange={registerationFormik.handleChange} value={registerationFormik.values.email} type=\"email\" name=\"email\" id=\"email\" className='form-control my-3' />\n        {registerationFormik.errors.email && registerationFormik.touched.email ? <div className=\"alert alert-danger\">{registerationFormik.errors.email}</div> : null}\n\n        <label htmlFor=\"password\">Password</label>\n        <input onBlur={registerationFormik.handleBlur} onChange={registerationFormik.handleChange} value={registerationFormik.values.password} type=\"password\" name=\"password\" id=\"password\" className='form-control my-3' />\n        {registerationFormik.errors.password && registerationFormik.touched.password ? <div className=\"alert alert-danger\">{registerationFormik.errors.password}</div> : null}\n\n        <button disabled={!(registerationFormik.isValid && registerationFormik.dirty && !loading)} className='btn bg-main text-white'>\n          {!loading ? \"Login\" : <i className='fas fa-spin fa-spinner'></i>}\n        </button>\n      </form>\n    </div>\n  )\n}\n","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Products\\Products.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Logout\\Logout.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Context\\CartContext.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Register\\Register.jsx",["117","118","119"],[],"import axios from 'axios';\nimport { useFormik } from 'formik'\nimport React, { useState } from 'react'\nimport * as Yup from 'yup';\nimport { baseUrl } from '../Utilities/BaseUrl'\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nexport default function Register() {\n\n    const notify = (msg, type) => toast[type](msg);\n\n    const [loading, setLoading] = useState(false)\n    let navigate = useNavigate();\n\n    // with Yup\n    let validationSchema = Yup.object({\n        name: Yup.string().min(3).max(15).required(' required ya malem'),\n        email: Yup.string().email().required(),\n        password: Yup.string().matches(/^[A-Z][a-z0-9A-Z@#%$]{5,}$/, 'password must match pattern').required(),\n        rePassword: Yup.string().oneOf([Yup.ref('password')], 'not match').required(),\n    })\n\n    // with Formik\n    // A custom validation function. This must return an object\n    // which keys are symmetrical to our values/initialValues\n    // const validate = values => {\n    //     const errors = {};\n    //     if (!values.name) {\n    //         errors.name = 'Required';\n    //     } else if (values.name.length > 15) {\n    //         errors.name = 'Must be 15 characters or less';\n    //     }\n\n    //     if (!values.email) {\n    //         errors.email = 'Required';\n    //     } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    //         errors.email = 'Invalid email address';\n    //     }\n\n    //     if (!values.password) {\n    //         errors.password = 'Required';\n    //     } else if (!/^[A-Z][a-z0-9A-Z@#%]$/i.test(values.password)) {\n    //         errors.password = 'Invalid password address';\n    //     }\n\n    //     if (!values.rePassword) {\n    //         errors.rePassword = 'Required';\n    //     } else if (values.rePassword != values.password) {\n    //         errors.rePassword = 'Password is not matched ';\n    //     }\n\n    //     return errors;\n    // };\n\n    let registerationFormik = useFormik({\n        initialValues: {\n            name: '',\n            email: \"\",\n            password: \"\",\n            rePassword: \"\"\n        },\n        // validate,\n        validationSchema,\n        onSubmit: (values) => {\n            setLoading(true)\n            // console.log(values);\n            // alert(JSON.stringify(values, null, 2));\n            // send api\n            axios.post(`${baseUrl}/auth/signup`, values).then((data) => {\n                console.log(data);\n\n                if (data.status == 201) {\n                    setLoading(false);\n                    notify(\"success\", \"success\");\n                    navigate('/login');\n                }\n            }).catch((error) => {\n                if (error.response.status == 409) {\n                    setLoading(false)\n                    notify(error.response.data.message, \"error\");\n                    // alert(error.response.data.message)\n                }\n                console.log(error);\n            })\n        },\n    })\n\n    // console.log(registerationFormik.errors);\n\n    return (\n        <div className=\"w-50 m-auto my-5\">\n            <h2>Reister Now</h2>\n            <form onSubmit={registerationFormik.handleSubmit}>\n\n                <label htmlFor=\"name\">Name</label>\n                <input onBlur={registerationFormik.handleBlur} onChange={registerationFormik.handleChange} value={registerationFormik.values.name} type=\"text\" name=\"name\" id=\"name\" className='form-control my-3' />\n                {registerationFormik.errors.name && registerationFormik.touched.name ? <div className=\"alert alert-danger\">{registerationFormik.errors.name}</div> : null}\n\n\n                <label htmlFor=\"email\">Email</label>\n                <input onBlur={registerationFormik.handleBlur} onChange={registerationFormik.handleChange} value={registerationFormik.values.email} type=\"email\" name=\"email\" id=\"email\" className='form-control my-3' />\n                {registerationFormik.errors.email && registerationFormik.touched.email ? <div className=\"alert alert-danger\">{registerationFormik.errors.email}</div> : null}\n\n                <label htmlFor=\"password\">Password</label>\n                <input onBlur={registerationFormik.handleBlur} onChange={registerationFormik.handleChange} value={registerationFormik.values.password} type=\"password\" name=\"password\" id=\"password\" className='form-control my-3' />\n                {registerationFormik.errors.password && registerationFormik.touched.password ? <div className=\"alert alert-danger\">{registerationFormik.errors.password}</div> : null}\n\n\n                <label htmlFor=\"rePassword\">rePassword</label>\n                <input onBlur={registerationFormik.handleBlur} onChange={registerationFormik.handleChange} value={registerationFormik.values.rePassword} type=\"password\" name=\"rePassword\" id=\"rePassword\" className='form-control my-3' />\n                {registerationFormik.errors.rePassword && registerationFormik.touched.rePassword ? <div className=\"alert alert-danger\">{registerationFormik.errors.rePassword}</div> : null}\n\n                <button disabled={!(registerationFormik.isValid && registerationFormik.dirty && !loading)} className='btn bg-main text-white'>\n                    {!loading ? \"Register\" : <i className='fas fa-spin fa-spinner'></i>}\n                </button>\n            </form>\n        </div>\n    )\n}\n","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\ProductDetailes\\ProductDetailes.jsx",["120"],[],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { baseUrl } from '../Utilities/BaseUrl'\nimport { NavLink, useParams } from 'react-router-dom'\n\nexport default function ProductDetailes() {\n   \n      \n    \n    let { id } = useParams()\n\n    const [product, setProduct] = useState([])\n\n    let getAllProduct = async () => {\n        let { data } = await axios.get(`${baseUrl}/products/${id}`)\n        // console.log(data.data);\n        setProduct(data.data)\n    }\n\n    useEffect(() => {\n        getAllProduct();\n    }, [])\n\n    return (\n        <>\n            <div className=\"container \">\n                <div className=\"row\">\n                    <div className=\"col-md-4 \">\n                        <img src={product.imageCover} className='w-100 border-black' alt=\"\" />\n                    </div>\n                    <div className=\"col-md-8 mt-5\">\n                        <h6 className=' fw-bold'>{product.title}</h6>\n                        <p className=' '>{product.description}</p>\n                            <h3>{product.price} EGP</h3>\n                            <h3>\n                  <i className='fa fa-star rating-color'></i>\n                  {product.ratingsAverage}\n                  </h3>\n                  <NavLink to='/cart'>\n                  <button  className='btn btn-success bg-main text-white w-25 text-center mt-2'>Add to Cart</button>\n                 </NavLink>\n                </div>\n              </div>\n         \n                    </div>\n        </>\n    )\n}\n","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\CheckOut\\CheckOut.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Cart\\Cart.jsx",["121","122"],[],"import React, { useContext, useState, useEffect } from 'react'\nimport { CartContext } from '../../Context/CartContext';\nimport { notify } from '../../Utils/notify';\nimport Loading from '../Loading/Loading';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Cart() {\n    let { getUserCart, removeCart , updateCart , getCartCount } = useContext(CartContext);\n    const [carts, setCarts] = useState([])\n    const [totalPrice, setTotalPrice] = useState([])\n\n\n    async function getCart() {\n        let token = localStorage.getItem('token');\n        if (token) {\n            let response = await getUserCart(token);\n            console.log(response);\n            setCarts(response.data.data.products)\n            setTotalPrice(response.data.data.totalCartPrice)\n        }\n\n        getUserCart()\n    }\n\n    async function deleteCart(productId) {\n        let token = localStorage.getItem('token');\n        if (token) {\n            let response = await removeCart(token, productId);\n            console.log(response);\n            setCarts(response.data.data.products)\n            setTotalPrice(response.data.data.totalCartPrice)\n            notify('product deleted', 'success')\n            getCartCount();\n        }\n\n        getUserCart()\n    }\n\n    \n    async function updateProductQy(productId , count) {\n        let token = localStorage.getItem('token');\n        if (token) {\n            let response = await updateCart(token, productId , count);\n            console.log(response);\n            setCarts(response.data.data.products)\n            setTotalPrice(response.data.data.totalCartPrice)\n            notify('product updated', 'success')\n        }\n\n        getUserCart()\n    }\n\n    useEffect(() => {\n        getCart()\n    }, [])\n\n\n\n    return (\n        <>\n            {/* <Loading/> */}\n\n            {carts.length != 0 ? <div className=\"container\">\n                <div className=\"bg-main-light p-3 my-4\">\n                    <h3>Shop Cart</h3>\n                    <h6 className='my-3 text-main fw-bold'>Total Cart Price : {totalPrice} EGP</h6>\n                    {carts.map((cart) => {\n                        return (\n                            <div className=\"row my-3 border-bottom py-3 \" key={cart._id}>\n                                <div className=\"col-md-1\">\n                                    <img src={cart.product.imageCover} alt=\"\" className='w-100' />\n                                </div>\n                                <div className=\"col-md-11\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-10\">\n                                                <div>\n                                                    <h6>{cart.product.title}</h6>\n                                                    <h6 className='text-main mx-2 fw-bolder'>{cart.price} EGP</h6>\n                                                    <button onClick={() => deleteCart(cart.product._id)} className='text-danger btn'>Remove <i className='fa-solid fa-trash'></i></button>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-md-2\">\n                                                <div>\n                                                    <button onClick={() => updateProductQy(cart.product._id ,cart.count +1)} className='btn btn-brdr'>+</button>\n                                                    <span className='mx-2'>{cart.count}</span>\n                                                    <button onClick={() => updateProductQy(cart.product._id ,cart.count -1)}  className='btn btn-brdr'>-</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n                        )\n                    })}\n                    <Link to='/checkout' className='btn bg-main text-white'>Check Out</Link>\n                </div>\n            </div> : <div className='mt-5 pt-5'>\n                <Loading />\n            </div>}\n        </>\n    )\n}\n","C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Navbar\\Navbar.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\MainSLider\\MainSLider.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Utilities\\BaseUrl.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\CategorySlider\\CategorySlider.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Product\\Product.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Components\\Loading\\Loading.jsx",[],[],"C:\\Users\\dell\\Desktop\\E-commerce\\src\\Utils\\notify.jsx",["123"],[],"import { ToastContainer, toast } from 'react-toastify';\n\nexport const notify = (msg, type) => toast[type](msg);\n",{"ruleId":"124","severity":1,"message":"125","line":5,"column":26,"nodeType":"126","messageId":"127","endLine":5,"endColumn":45},{"ruleId":"124","severity":1,"message":"128","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":74,"column":25,"nodeType":"131","messageId":"132","endLine":74,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":81,"column":35,"nodeType":"131","messageId":"132","endLine":81,"endColumn":37},{"ruleId":"124","severity":1,"message":"128","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":74,"column":33,"nodeType":"131","messageId":"132","endLine":74,"endColumn":35},{"ruleId":"129","severity":1,"message":"130","line":80,"column":43,"nodeType":"131","messageId":"132","endLine":80,"endColumn":45},{"ruleId":"133","severity":1,"message":"134","line":22,"column":8,"nodeType":"135","endLine":22,"endColumn":10,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":56,"column":8,"nodeType":"135","endLine":56,"endColumn":10,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"139","line":64,"column":27,"nodeType":"131","messageId":"132","endLine":64,"endColumn":29},{"ruleId":"124","severity":1,"message":"128","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},"no-unused-vars","'createBrowserRouter' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllProduct'. Either include it or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.",["141"],"Expected '!==' and instead saw '!='.",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [getAllProduct]",{"range":"146","text":"147"},"Update the dependencies array to be: [getCart]",{"range":"148","text":"149"},[549,551],"[getAllProduct]",[1741,1743],"[getCart]"]